# run_migration.py
"""
–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ PostgreSQL
"""
import os
import sys
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
load_dotenv()


def main():
  print("üöÄ –ó–ê–ü–£–°–ö –ú–ò–ì–†–ê–¶–ò–ò –î–ê–ù–ù–´–• SQLite ‚Üí PostgreSQL")
  print("=" * 60)

  try:
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –º–∏–≥—Ä–∞—Ü–∏–∏
    from backend.app.core.migration import migrate_from_sqlite_to_postgresql
    from backend.app.core.database import get_db_stats

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –º–∏–≥—Ä–∞—Ü–∏–∏
    print("\nüìä –°–û–°–¢–û–Ø–ù–ò–ï POSTGRESQL –î–û –ú–ò–ì–†–ê–¶–ò–ò:")
    initial_stats = get_db_stats()
    for lottery_type, stats in initial_stats.get('draws', []):
      print(f"   üìà {lottery_type}: {stats['count']} —Ç–∏—Ä–∞–∂–µ–π")

    if not initial_stats.get('draws'):
      print("   üì≠ PostgreSQL –ø—É—Å—Ç–∞")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    print("\n" + "=" * 60)
    total_migrated = migrate_from_sqlite_to_postgresql()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    final_stats = get_db_stats()

    print(f"\nüêò POSTGRESQL (—Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ):")
    total_final = 0
    for item in final_stats.get('draws', []):
      lottery_type = item['lottery_type']
      count = item['count']
      min_draw = item['min_draw']
      max_draw = item['max_draw']
      total_final += count
      print(f"   üìä {lottery_type}: {count} —Ç–∏—Ä–∞–∂–µ–π (#{min_draw} - #{max_draw})")

    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ú–ò–ì–†–ê–¶–ò–ò:")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ: {total_migrated} —Ç–∏—Ä–∞–∂–µ–π")
    print(f"   üìä –í—Å–µ–≥–æ –≤ PostgreSQL: {total_final} —Ç–∏—Ä–∞–∂–µ–π")

    if total_migrated > 0:
      print(f"\nüéâ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
      print(f"üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å PostgreSQL")
    else:
      print(f"\n‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
      print(f"üí° –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å –≤ PostgreSQL –∏–ª–∏ —Ñ–∞–π–ª—ã SQLite –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

  except Exception as e:
    print(f"\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ú–ò–ì–†–ê–¶–ò–ò: {e}")
    import traceback
    traceback.print_exc()
    return False

  return True


if __name__ == "__main__":
  success = main()
  if success:
    print(f"\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
  else:
    print(f"\n‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")